input {
  tcp {
    port => 5000
    type => syslog
  }
  udp {
    port => 5000
    type => syslog
  }
}

## Add your filters / logstash plugins configuration here

filter {
  if [type] == "syslog" {
    grok {
      break_on_match => false
      pattern_definitions => {
        "JSONOBJECT"=> "{(.*)}"
      }
      match => { "message" => "METRIC: %{JSONOBJECT:raw_metric} cmd_type=%{WORD:cmd_type} consumer=%{WORD:consumer} name=%{DATA:plugin_name} producer=%{WORD:producer}" }
      match => { "message" => "METRIC: %{JSONOBJECT:raw_metric} cmd_type=%{WORD:cmd_type} name=%{DATA:plugin_name} run_id=%{DATA:run_id}" }
      match => { "message" => "%{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    json {
      source => "syslog_message"
      target => "payload"
    }
    if [cmd_type] == "loader" {
      mutate {
        add_field => [ "consumer", "True" ]
        add_field => [ "producer", "False" ]
      }
    }
    if [cmd_type] == "extractor" {
      mutate {
        add_field => [ "consumer", "False" ]
        add_field => [ "producer", "True" ]
      }
    }
    if [raw_metric] {
      # replace backslashes with nothing
      mutate { gsub => [ "raw_metric", "[\\]", "" ] }
      json {
        source => "raw_metric"
        target => "metric"
      }
      mutate {
        add_tag => "metric"
        convert => { "[metric][value]" => "float" }
        add_field => [ "stream", "%{[metric][tags][table]}" ]
      }
    }
    date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
    }
    mutate {
      remove_field => ["@version"]
      remove_field => ["raw_metric"]
      remove_field => ["message"]
    }
  }
}

output {
  if [type] == "syslog" and "_grokparsefailure" in [tags] {
    stdout { codec => rubydebug }
  }
  if "metric" in [tags] {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOSTS}"
      user => "elastic"
      password => "${MATATIKA_ES_ELASTIC_PASSWORD}"
      ssl => true
      ssl_certificate_verification => true
      cacert => '/etc/certs/ca/ca.crt'
      ilm_enabled => true
      ilm_rollover_alias => "job-metrics"
    }
    # DEBUG
    #stdout { codec => rubydebug }
  }
  # Send to Logstash index
  elasticsearch {
    hosts => "${ELASTICSEARCH_HOSTS}"
    user => "elastic"
    password => "${MATATIKA_ES_ELASTIC_PASSWORD}"
    ssl => true
    ssl_certificate_verification => true
    cacert => '/etc/certs/ca/ca.crt'
  }
  # DEBUG
  #stdout { codec => rubydebug }
}
